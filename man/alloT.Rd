% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neutral_model_ML_support.R
\name{ralloT}
\alias{ralloT}
\alias{dalloT}
\alias{palloT}
\alias{qalloT}
\title{Neutral Herbivory Distribution Based On Allometric Scaling Laws}
\usage{
ralloT(
  n,
  mean.phi.T = NULL,
  min.phi = 0.005,
  max.phi = 1,
  a = 14/9,
  lambda = NULL
)

dalloT(
  x,
  mean.phi.T = NULL,
  min.phi = 0.005,
  max.phi = 1,
  a = 14/9,
  lambda = NULL,
  k.max = 50,
  by = 0.001,
  k.max.tolerance = 1e-05,
  k.fft.limit = 100,
  log = FALSE,
  parallel = FALSE,
  cores = 1
)

palloT(
  q,
  mean.phi.T = NULL,
  min.phi = 0.005,
  max.phi = 1,
  a = 14/9,
  lambda = NULL,
  by = 0.01,
  cores = 1,
  lower.tail = TRUE,
  log.p = FALSE,
  ...
)

qalloT(
  p,
  mean.phi.T = NULL,
  min.phi = 0.005,
  max.phi = 1,
  a = 14/9,
  lambda = NULL,
  n.sim = 1000,
  lower.tail = TRUE,
  log.p = FALSE
)
}
\arguments{
\item{n}{the number of observations to generate}

\item{mean.phi.T}{The mean herbivory of the distribution when herbivores are not plant limited. If  \code{NULL}, supplied \code{lambda} value is converted to \code{mean.phi.T}. See details.}

\item{min.phi}{the minimum bite size in terms of proportion leaf herbivory. Defaults to 0.005 (0.5\%).}

\item{max.phi}{the maximum bite size in terms of proportion leaf herbivory Defaults to 1 (100\%).}

\item{a}{the combined allometric scaling coefficient. Defaults to 14/9.}

\item{lambda}{An alternative parameterization of mean.phi.T. see \code{?get_lambda()}}

\item{x, q}{a vector of values of proportion herbivory}

\item{k.max}{The maximum number of convolutions of the neutral 'bite size' distribution in numerical approximation of the PDF of the neutral herbivory distribution. Default is 50.}

\item{by}{The grid resolution used in the FFT convolutions. Default is 0.001.}

\item{k.max.tolerance}{the tolerance threshold of maximum convolution cut off (ideally probabilities above \code{k.max} convolutions is vanishingly small).}

\item{k.fft.limit}{the maximum number of convolutions performed by FFT. For k convolutions above this limit, a Gaussian approximation is used. See details for more information.}

\item{log, log.p}{if \code{TRUE} (default is \code{FASLE}), return probabilities on the log scale.}

\item{parallel}{if \code{TRUE}, use parallel computing supported via the package \code{foreach} to speed up the computation. The number of parallel processes depends on the argument \code{cores}. Ignored if \code{cores} is set  above 1.}

\item{cores}{the number of parallel processes in parallel computing.}

\item{lower.tail}{logical; if \code{TRUE} (default), probabilities are \eqn{P(X \leq x)} otherwise, \eqn{P(X > x)}}

\item{...}{addition arguments passed to \code{dalloT()} in \code{palloT()}.}

\item{p}{a vector of probabilities}

\item{n.sim}{the number of simulations used to numerically estimate the quantile function. Defaults to 1000.}
}
\value{
A vector of numeric values
}
\description{
Density, distribution function, quantile function, and random generation for the neutral herbivory distribution based on allometric scaling laws.
}
\details{
The neutral herbivory distribution is a type of compound Poisson distribution taking the form:
\deqn{\phi_{Ti} = \sum^{k_i}_{j=1} \phi_j,} if \eqn{\phi_{Ti} \leq 1}, otherwise \deqn{\phi_{Ti} = 1,} where \deqn{P(\phi) = \frac{1-\alpha}{\phi_M^{1-\alpha} - \phi_m^{1-\alpha}} \phi^{1-\alpha},} and \deqn{k \sim Pois(\lambda = \frac{\overline{\phi_{T}'}}{\overline{\phi}})}
\eqn{\overline{\phi_{T}'}} is the mean herbivory of the distribution when herbivores are not plant limited. That is, if \eqn{\overline{\phi_{T}}}, which has support \eqn{[x, \infty]}, is not truncated to \eqn{[0, 1]}. \eqn{\overline{\phi_{T}}} and \eqn{\overline{\phi_{T}'}} are often close to each other. For more details on the 'bite size' distribution see \code{?rallo}.

The PDF of \eqn{P(\phi_T)} does not have a closed form solution and is therefore numerically approximated. We first marginalize out \eqn{k} via
\deqn{P(\phi_T)=\sum_{k=0}^\infty P(\phi_T|k) P(k|\lambda ).}
As \eqn{k} increases, \eqn{P(k|\lambda)} becomes vanishingly small, so the infinite sum can be cut off at a rather low \code{k.max} value without loosing much accuracy. \code{k.max.tolerance} sets the tolerance threshold for the cut off in the calculation. More precisely, the function checks to see whether \eqn{P(k.max | \lambda)} is less than the threshold of triviality. If exceeded, the function would throw a warning.

The calculation of the conditional probability distribution \eqn{P(\phi_T | k)} requires repeated convolutions of the bite size distribution, which is computationally expensive. Thankfully, we can use the Fast Fourier Transformation (FFT) to simplify the calculation significantly. Convolution of functions is simply the product of those functions in the frequency domain that is then back transformed into the time domain.
\deqn{P(\phi_T|k) = \overbrace{P(\phi)*P(\phi)...*P(\phi)}^{\text{k times}} = \mathcal{F}^{-1} [\mathcal{F}[P(\phi)]^k]}
Argument \code{by} sets the grid resolution of the discrete Fourier transform. Usually, a value below 0.001 is required to achieve reasonable accuracy. Eights times as many zeros are added to the end of the PDF to improve the accuracy and efficiency of the FFT (i.e. zero padding). To avoid overflow and improve computational efficiency, convolutions with \eqn{k > 100} are approximated with a normal distribution, given the central limit theorem:
\deqn{P(\phi_T | k > 100) \approx \mathcal{N}(\mu = k\overline\phi,\sigma=\sqrt{k\mathbb{Var}[\phi]}), }
where
\deqn{\overline{\phi} = \frac{1-\alpha}{2-\alpha} \frac{\phi_M^{2-\alpha} - \phi_m^{2-\alpha}}{\phi_M^{1-\alpha} - \phi_m^{1-\alpha}},} and
\deqn{\mathbb{Var}[\phi]=\frac{\phi_M^{3-\alpha}-\phi_m^{3-\alpha}}{\phi_M^{1-\alpha}-\phi_m^{1-\alpha}}\frac{1-\alpha}{3-\alpha}-(\frac{\phi_M^{2-\alpha}-\phi_m^{2-\alpha}}{\phi_M^{1-\alpha}-\phi_m^{1-\alpha}}\frac{1-\alpha}{2-\alpha})^2.}

The CDF of the neutral herbivory distribution is calculated numerically by adding up the density. Because the neutral herbivory distribution is a mix of discrete and continuous, the CDF is the sum of the discrete portion \deqn{P(\phi_T = 0, \overline{\phi_T'}, \phi_m, \phi_M, \alpha) = e^{-\lambda}} and the integral of the continuous portion \deqn{\int_0^q P(\phi_T = q, \overline{\phi_T'}, \phi_m, \phi_M, \alpha) d \phi_T.}

Because the CDF of the neutral herbivory distribution is too computationally intensive, \code{ralloT()} generates values using random draws from the Poisson and 'bite size' distribution. It is essentially a wrapper for the function \code{allometry.herb.quasi.sim()}. For the same reason, \code{qalloT()} estimates the quantile function by generating \code{n.sim} draws from the neutral herbivory distribution then finding the empirical cumulative density function.
}
