% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neutral_model_ML_support.R
\name{fit_allo_herb}
\alias{fit_allo_herb}
\title{Fit Neutral Herbivory Distribution Using Maximum Likelihood Estimation}
\usage{
fit_allo_herb(
  data.vec,
  optim.vars = c("mean.phi.T"),
  init = 0,
  method = c("Nelder-Mead", "BFGS", "L-BFGS-B", "Brent", "nlminb", "nlm"),
  k.max = 50,
  by = 0.001,
  k.max.tolerance = 1e-05,
  k.fft.limit = 100,
  param.vals = c(mean.phi.T = 0.1, min.phi = 0.005, max.phi = 1, a = 14/9),
  param.val.trans = c(mean.phi.T = function(x) {
     x/100
 }, min.phi = function(x)
    {
     x/100
 }, max.phi = function(x) {
     x/100
 }, a = function(x) {
     x
 }),
  lower = -Inf,
  upper = Inf,
  cores = 1,
  id = NULL,
  ...
)
}
\arguments{
\item{data.vec}{A vector of numeric data. \code{NA}s are ignored. If the whole vector does not contain any non-zero values or contains values outside of \eqn{[0,1]}, the function would throw an error. Values less than "min.phi" are coerced to zero by default.}

\item{optim.vars}{A vector of character string indicating the name of the variables to be estimated. Acceptable values are "mean.phi.T" (default), "min.phi", "max.phi", and "a".}

\item{init}{A numeric vector of initial values in the order of optim.vars for the optimizer to start searching. Defaults to 0.}

\item{method}{The method of maximum likelihood estimation algorithm. Acceptable methods are "Nelder-Mead" (Default), "BFGS", "L-BFGS-B", "Brent", "nlminb", and "nlm". Defaults to "Brent" for one dimensional optimization. For details see \code{?stats::optim()}, \code{?stats::nlminb()}, and \code{?stats::nlm()}}

\item{k.max}{The maximum number of convolutions of the neutral 'bite size' distribution in numerical approximation of the PDF of the neutral herbivory distribution. Default is 50.}

\item{by}{The grid resolution used in the FFT convolutions. Default is 0.001.}

\item{k.max.tolerance}{the tolerance threshold of maximum convolution cut off (ideally probabilities above \code{k.max} convolutions is vanishingly small).}

\item{k.fft.limit}{The maximum number of convolutions performed by FFT. For k convolutions above this limit, a Gaussian approximation is used. See details for more information.}

\item{param.vals}{A named vector of the default parameter values of the neutral herbivory distribution. Set to \code{NA} if the variable is declared in the \code{optim.vars} argument (i.e. is estimated). "mean.phi.T" defaults to 0.1, "min.phi" to 0.005, "max.phi" to 1, and "a" to 14/9.}

\item{param.val.trans}{A vector of functions that transform each estimated parameter value in the optimization process (the optimizer find the values on the transformed scale). Set to \code{NA} if the variable is not declared in the \code{optim.vars} argument (i.e. is not estimated). Default transformation is x/100 for "mean.phi.T", "min.phi", and "max.phi". Default transformation for "a" is identity.}

\item{lower, upper}{A numeric vector indicating the bounds of each estimated variable for the "L-BFGS-B" and "Brent" method. Defaults to -Inf and Inf. If the length of supplied vector is shorter than the number of estimated variables, the first element of the vector is set as the bound for all variables. If the method is "Brent" and the \code{optim.vars = "mean.phi.T"}, the bounds default to 0 and 100.}

\item{cores}{The number of parallel processes in parallel computing.}

\item{id}{A character string supplied for book keeping purposes. Default is \code{NULL}. Useful for when storing a large number of "fit_allo_herb" objects in a list.}

\item{...}{Additional arguments that are passed to the optimizer functions \code{optim()}, \code{nlminb()}, or \code{nlm()}.}
}
\value{
An 'allo_herb_fit' object with the following slots:

\code{theta.names}: A vector of character string naming the fitted parameters

\code{par}: the value of fitted parameters on the transformed scale in the order of theta.names

\code{se}: standard error of fitted parameters on the transformed scale.

\code{loglik}: log likelihood of the data given the parameter combinations

\code{hessian}: The Hessian matrix

\code{iters}: The number of times the likelihood function or its gradient is evaluated.

\code{message}: message passed from the optimizer function

\code{convergence}: 0 indicates successful convergence. Error codes are passed from the optimizer function. 1 indicate that the iteration limit has been reached and convergence has failed. 2 indicate that the Hessian matrix is non-positive definite.

\code{optim.param}: A list of parameters passed to \code{optim2()}, including the method of optimization, a vector of the used initial values for optimization, the lower and upper bounds.

\code{data}: The data to which the model is fitted to

\code{param.val.trans}: A vector of functions that transform each estimated parameter value in the optimization process (the optimizer find the values on the transformed scale).

\code{param.vals}: the default parameter values assumed for the model

\code{id}: name of model supplied via the id argument

\code{n}: the sample size

\code{df}: the degrees of freedom of the model

\code{herbivar.version}: version of herbivar used to fit the model

\code{num.approx.param}: a named vector of values indicating the parameters used in the numerical approximation of the density function of the neutral herbivory distribution.
}
\description{
Estimate unknown parameter(s) in the neutral herbivory model from a vector of observed herbivory data using Maximum Likelihood Estimation (MLE). The likelihood function is of the form
\deqn{\mathcal{L}(\phi_{T1},\phi_{T2},...,\phi_{Tn}|\overline{\phi_T'},\phi_M,\phi_m,\alpha)=\prod_i^n P(\phi_{Ti}|\overline{\phi_T'},\phi_M,\phi_m,\alpha).}
}
\details{
The order of \code{optim.var}, \code{upper}, \code{lower}, and \code{init} must match exactly. The initial value and bounds must be on the scale of the transformed variable.
}
