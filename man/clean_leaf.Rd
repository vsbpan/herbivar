% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_herb_image_support.R
\name{clean_leaf}
\alias{clean_leaf}
\title{Select Pixels of Uneaten Leaf From Scanned Image}
\usage{
clean_leaf(
  object,
  fg.thresh = "kmeans",
  bg.thresh = "10\%",
  fg.adjust = 1,
  blur.size = 2,
  plot = TRUE,
  save.plot.path = NA,
  save.plot.size = "original",
  return.cimg = TRUE,
  approx.res = 10000,
  km = c(1L, 2L),
  ws.thresh = "kmeans",
  px.size = NA
)
}
\arguments{
\item{object}{a cimg, pixset, or matrix, or array.}

\item{fg.thresh}{a threshold for selecting the foreground in the watershed transform. Can be either numeric, a string, or "kmeans", or "otsu". When set to "otsu" or "kmeans", the threshold is automatically selected by the internal function \code{threshold2()}. Default is "kmeans".}

\item{bg.thresh}{a threshold for selecting the background in the watershed transform. Can be either numeric, a string, "kmeans", or "otsu". When set to "kmeans" or "otsu", the threshold is automatically selected by the internal function \code{threshold2()}. Default is "10\%".}

\item{fg.adjust}{used to adjust the automatic threshold. If the auto-threshold is at k, the effective threshold will be at \code{fg.adjust} * k.}

\item{blur.size}{a positive numeric value indicating the size of the median filter used to remove small speckles. Default is 2.}

\item{plot}{if \code{TRUE}, a plot of the original image and binary-ized image side-by-side will be plotted. Maybe slow.}

\item{save.plot.path}{the file path as a character string for saving the quality check plot. If set to \code{NA} (default), no plot will be saved.}

\item{save.plot.size}{an integer vector of length two defining the size of the quality check plot in the number of pixels. If set to "original", the size of the original image will be retained (same height and double the width).}

\item{return.cimg}{if \code{TRUE} (default), the function returns a 'cimg' object. Otherwise, the function returns a 'pixset'.}

\item{approx.res}{the number of pixels used in threshold approximation. Default is 10000.}

\item{km}{an integer vector of length two. The first value selects the the boundary rank in increasing means identified by kmeans clustering (defaults to 1, selecting the boundary that separates the two clusters with the lowest mean). The second value selects the k number of clusters to form (defaults to 2). Ignored when not auto-thresholding.}

\item{ws.thresh}{a threshold for selecting leaf pixels from a watershed transformed image. Can be either numeric, a string, "kmeans", or "otsu". When set to "otsu" or "kmeans", the threshold is automatically selected by the internal function \code{threshold2()}. Default is "kmeans".}

\item{px.size}{value passed to \code{px_size_calc()}. When set to \code{NA} (default), the 'px.size' attribute is extracted from the supplied \code{object}.}
}
\value{
A 'cimg' object if \code{return.cimg} is set to \code{TRUE}, otherwise, a 'pixset'.
}
\description{
get a binary-ized image of a leaf scan, removing background artifacts and eaten sections of the leaf.
}
\details{
Some quick notes:

\code{fg.thresh} is better left at "kmeans", unless you know what parameter is best tuned for the set of images you will process.

\code{fg.adjust} can be increased to pick up more of the foreground, and decreased if too much non-leaf pixels are misidentified.

\code{bg.thresh} can be lowered occasionally when lighter spots of the leaf is mistaken as background.

\code{blur.size} can be increased when small white speckles is present in the processed image.

\code{km} can be toggled to change the number of clusters and the boundary rank selected when "kmeans" misbehaves.
}
\note{
The code for the watershed method is adapted from Simon Barthelme's vignette https://cran.r-project.org/web/packages/imager/vignettes/pixsets.html. accessed date 2022-07-25.
}
\examples{
file_path <- system.file("extdata/raw_scan.jpg",package="herbivar")
img <- load.image(file_path) \%>\%
   crop(empty.rm = "auto", cut_edge = 10) \%>\%
   add_px_size("dpi:300") \%>\%
   thin(3)

plot(img)
img.cleaned <- clean_leaf(img)

plot(img.cleaned)
}
